services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonarqube
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonar"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports: ["5432:5432"]
    volumes: [ "sonar-db:/var/lib/postgresql/data" ]

  sonarqube:
    image: sonarqube:10.6.0-community
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonarqube
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    ports: ["9000:9000"]
    volumes:
      - sonar-data:/opt/sonarqube/data
      - sonar-logs:/opt/sonarqube/logs

  jenkins:
    build: { context: ../jenkins }
    environment:
      SONARQUBE_TOKEN: ${SONARQUBE_TOKEN:-changeme}
    ports: ["8080:8080", "50000:50000"]
    volumes:
      - jenkins-home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
      - ../:/workspace
    working_dir: /workspace

volumes:
  sonar-db:
  sonar-data:
  sonar-logs:
  jenkins-home:
